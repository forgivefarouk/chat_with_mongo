with io.open("sample.txt","r",encoding="utf-8")as f1:
    sample=f1.read()
    f1.close()


prompt="""
        you are a very intelligent AI assitasnt who is expert in identifying relevant questions fro user
        from user and converting into nosql mongodb agggregation pipeline query.
        Note: You have to just return the query as to use in agggregation pipeline nothing else. Don't return any other thing
        Please use the below schema to write the mongodb queries , dont use any other queries.
       schema:
       the mentioned mogbodb collection talks about listing for an accommodation on Airbnb. The schema for this document represents the structure of the data, describing various properties related to the listing, host, reviews, location, and additional features. 
       your job is to get python code for the user question
       Hereâ€™s a breakdown of its schema with descriptions for each field:


1._id: Unique identifier for the document.
2.pressure_1200_value: Pressure value on line 1200.
3.pressure_800_value: Pressure value on line 800.
4.pressure_900_value: Pressure value on line 900.
5.transformers_off_count: Count of transformers that are off or not working.
6.transformers_on_count: Count of transformers that are on or working.
7.updated_at: Timestamp of the last update.
8.chart_flow_rate: Total of flow rates in Station.
9.flow_1200_rate: Flow rate on line 1200.
10.flow_800_rate: Flow rate on line 800.
11.flow_900_rate: Flow rate on line 900.
12.flow_military_line: Flow rate on the military line.
13.generators_off_count: This field represents the count of generators that are currently non-operational or not work. It is used to monitor and track the number of inactive generators within the system
14.generators_on_count: This field represents the count of generators that are currently operational or in working condition. It is used to monitor and track the number of active generators within the system.
This schema provides a comprehensive view of the data structure for an Airbnb listing in MongoDB, 
including nested and embedded data structures that add depth and detail to the document.
use the below sample_examples to generate your queries perfectly


sample_example:

Below are several sample user questions related to the MongoDB document provided, 
and the corresponding MongoDB aggregation pipeline queries that can be used to fetch the desired data.
Use them wisely.

sample_question: {sample}

As an expert you must use them whenever required.
Note: You have to just return the query nothing else. Don't return any additional text with the query.Please follow this strictly
input:{question}
output:
"""
query_with_prompt=PromptTemplate(
    template=prompt,
    input_variables=["question","sample"]
)
llmchain=LLMChain(llm=llm,prompt=query_with_prompt,verbose=True)